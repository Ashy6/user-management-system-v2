# Cloudflare部署环境变量配置示例
# 复制此文件为 .env.cloudflare 并填入实际值

# ===========================================
# 前端环境变量 (Cloudflare Pages)
# ===========================================

# API基础URL - 指向Cloudflare Workers后端
VITE_API_URL=https://your-backend-worker.your-subdomain.workers.dev

# 应用配置
VITE_APP_NAME=User Management System
VITE_APP_VERSION=1.0.0

# ===========================================
# 后端环境变量 (Cloudflare Workers)
# ===========================================

# 应用配置
NODE_ENV=production
PORT=8787
API_PREFIX=api

# JWT配置
JWT_SECRET=your-super-secret-jwt-key-for-cloudflare
JWT_EXPIRES_IN=7d

# 数据库配置 (使用外部数据库服务)
# 推荐使用 PlanetScale, Supabase, 或 Neon
DB_HOST=your-database-host.com
DB_PORT=5432
DB_USERNAME=your_username
DB_PASSWORD=your_password
DB_DATABASE=user_management
DB_SSL=true

# 邮件配置
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USER=your-email@gmail.com
EMAIL_PASS=your-app-password
EMAIL_FROM=your-email@gmail.com

# Redis配置 (可选，使用Upstash Redis)
REDIS_URL=redis://your-redis-url
REDIS_HOST=your-redis-host
REDIS_PORT=6379
REDIS_PASSWORD=your-redis-password

# 安全配置
BCRYPT_ROUNDS=12
EMAIL_CODE_EXPIRES_IN=300
RATE_LIMIT_MAX=100

# CORS配置
CORS_ORIGIN=https://your-frontend-domain.pages.dev,https://your-custom-domain.com

# ===========================================
# Cloudflare特定配置
# ===========================================

# Workers KV命名空间ID (可选)
KV_NAMESPACE_ID=your-kv-namespace-id

# D1数据库ID (如果使用Cloudflare D1)
D1_DATABASE_ID=your-d1-database-id

# R2存储桶名称 (如果使用Cloudflare R2)
R2_BUCKET_NAME=your-r2-bucket

# ===========================================
# 部署配置说明
# ===========================================

# 1. 前端部署到Cloudflare Pages:
#    - 在Cloudflare Dashboard创建Pages项目
#    - 连接GitHub仓库
#    - 设置环境变量: VITE_API_URL
#    - 构建命令: cd frontend && npm install && npm run build
#    - 输出目录: frontend/dist

# 2. 后端部署到Cloudflare Workers:
#    - 使用 wrangler deploy 命令部署
#    - 使用 wrangler secret put 设置敏感变量
#    - 使用 wrangler env put 设置普通变量

# 3. 数据库推荐服务:
#    - PlanetScale: MySQL兼容，全球分布
#    - Supabase: PostgreSQL，包含认证和实时功能
#    - Neon: PostgreSQL，无服务器
#    - Cloudflare D1: SQLite兼容，边缘计算

# 4. Redis推荐服务:
#    - Upstash Redis: 无服务器Redis
#    - Redis Cloud: 托管Redis服务

# 5. 邮件服务推荐:
#    - SendGrid: 专业邮件服务
#    - Mailgun: 开发者友好
#    - Gmail SMTP: 简单易用

# 注意事项:
# - 所有敏感信息都应使用 wrangler secret put 命令设置
# - 确保数据库支持SSL连接
# - 配置正确的CORS域名
# - 定期轮换JWT密钥和其他敏感信息